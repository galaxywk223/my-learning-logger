"""Initial migration with all tables

Revision ID: ce12d6fcae15
Revises: 
Create Date: 2025-07-09 14:24:44.577135

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ce12d6fcae15'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('countdown_event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('target_datetime_utc', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at_utc', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('daily_plan_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plan_date', sa.Date(), nullable=False),
    sa.Column('content', sa.String(length=500), nullable=False),
    sa.Column('time_slot', sa.String(length=20), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('daily_plan_item', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_daily_plan_item_plan_date'), ['plan_date'], unique=False)

    op.create_table('milestone_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('motto',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('setting',
    sa.Column('key', sa.String(length=50), nullable=False),
    sa.Column('value', sa.String(length=200), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('key', 'user_id')
    )
    op.create_table('stage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('todo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('daily_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('log_date', sa.Date(), nullable=False),
    sa.Column('efficiency', sa.Float(), nullable=True),
    sa.Column('stage_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['stage_id'], ['stage.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('log_date', 'stage_id', name='_stage_log_date_uc')
    )
    op.create_table('milestone',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('event_date', sa.Date(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['milestone_category.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('milestone', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_milestone_event_date'), ['event_date'], unique=False)

    op.create_table('sub_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('weekly_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('week_num', sa.Integer(), nullable=False),
    sa.Column('efficiency', sa.Float(), nullable=True),
    sa.Column('stage_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['stage_id'], ['stage.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('year', 'week_num', 'stage_id', name='_stage_year_week_uc')
    )
    op.create_table('log_entry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('log_date', sa.Date(), nullable=False),
    sa.Column('time_slot', sa.String(length=50), nullable=True),
    sa.Column('task', sa.String(length=200), nullable=False),
    sa.Column('actual_duration', sa.Integer(), nullable=True),
    sa.Column('legacy_category', sa.String(length=100), nullable=True),
    sa.Column('mood', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('stage_id', sa.Integer(), nullable=False),
    sa.Column('subcategory_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['stage_id'], ['stage.id'], ),
    sa.ForeignKeyConstraint(['subcategory_id'], ['sub_category.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('milestone_attachment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('milestone_id', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.String(length=256), nullable=False),
    sa.Column('original_filename', sa.String(length=200), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['milestone_id'], ['milestone.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('milestone_attachment')
    op.drop_table('log_entry')
    op.drop_table('weekly_data')
    op.drop_table('sub_category')
    with op.batch_alter_table('milestone', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_milestone_event_date'))

    op.drop_table('milestone')
    op.drop_table('daily_data')
    op.drop_table('todo')
    op.drop_table('stage')
    op.drop_table('setting')
    op.drop_table('motto')
    op.drop_table('milestone_category')
    with op.batch_alter_table('daily_plan_item', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_daily_plan_item_plan_date'))

    op.drop_table('daily_plan_item')
    op.drop_table('countdown_event')
    op.drop_table('category')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    # ### end Alembic commands ###
